<launch>

	<arg name="debug" default="false"/>
	<arg name="gui" default="true"/>
	<arg name="pause" default="false"/>
	<arg name="world" value="$(find hybrid_astar)/world/hospital_04.world"/>

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" default="$(arg world)"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg pause)"/>
		<arg name="use_sim_time" value="true"/>
	</include>

	<!--<include file="$(find ridgeback_gazebo)/launch/spawn_ridgeback.launch">
		<arg name="config" default="dual_hokuyo_lasers" />-->

		<!-- <arg name="x" default="0.0"/>
		<arg name="y" default="0.0"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="0.785"/> -->

		<!-- <arg name="x" default="-1.0"/>
		<arg name="y" default="-1.0"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="-2.355"/> -->

		<!--<arg name="x" default="-17.000000"/>
		<arg name="y" default="0"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="0.000000"/>-->

		<!-- <arg name="x" default="-9.190936"/>
		<arg name="y" default="9.864006"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="1.363078"/> -->

		<!-- <arg name="x" default="-16.516881"/>
		<arg name="y" default="-4.730785"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="3.1400000"/> -->

		<!-- <arg name="x" default="17.712865"/>
		<arg name="y" default="1.769887"/>
		<arg name="z" default="0.025893"/>
		<arg name="yaw" default="1.5700000"/> 
	</include>-->

 <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>

  <arg name="first_tb3_x_pos" default="-17.50"/>
  <arg name="first_tb3_y_pos" default="0.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0"/>

  <arg name="second_tb3_x_pos" default=" -10.50"/>
  <arg name="second_tb3_y_pos" default="0.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" -3.14"/>


  <arg name="third_tb3_x_pos" default=" -10.50"/>
  <arg name="third_tb3_y_pos" default="4.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" -3.14"/>

 <group ns = "$(arg first_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>
    
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />
  </group>

  <group ns = "$(arg second_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />
  </group>

<?ignore  <group ns = "$(arg third_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg third_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg third_tb3) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -Y $(arg third_tb3_yaw) -param robot_description" />
  </group> ?>


	<!-- AMCL -->
	<!-- <arg name="scan_topic" default="front/scan" />
	<include file="$(find ridgeback_navigation)/launch/include/amcl.launch" >
		<arg name="scan_topic"	value="$(arg scan_topic)" />
	</include> -->

	<!-- Fake Localization -->
	<!-- <node pkg="fake_localization" type="fake_localization" name="fake_localization">
<param name = "odom_frame_id" value ="tb3_0/odom"/>-->
		<!-- <param name="delta_x" value="-24.9532"/>
		<param name="delta_y" value="-25.0" />  -->
	<!--</node>--> 
	<!-- <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="0 0 0 0 0 0 odom base_link"/>
		 <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom2" args="0 0 0 0 0 0 map my_frame"/>-->

	<!--- Move Base CHANGE 6 Aug -->
	<!--<include file="$(find ridgeback_navigation)/launch/include/move_base.launch" /> -->

	<!-- Hospital -->
	<!-- <node pkg="map_server" name="map_server" type="map_server" args="$(find hybrid_astar)/maps/hospital_04.yaml"/> -->
	<node pkg="map_server" name="map_server" type="map_server" args="$(find hybrid_astar)/maps/hospital_restricted.yaml"/>

	<!-- Hybrid A* -->
	<!-- CHANGE MADE ON 11 AUG UNCOMMENT LATER -->	
	<node pkg="hybrid_astar" type="hybrid_astar" name="hybrid_astar2" output="screen" />
<!-- <node pkg="hybrid_astar" type="hybrid_astar_tb3_1" name="hybrid_astar" output="screen" />
<node pkg="hybrid_astar" type="hybrid_astar" name="hybrid_astar1" output="screen" />	-->

	<!-- Voronoi Graph -->
	<node pkg="tuw_voronoi_graph" type="tuw_voronoi_graph_node" name="graph_generator" output="screen">
		<param name="graph_cache_path" value="$(find hybrid_astar)/maps/voronoi/cache/" />
		<param name="custom_graph_path" value="" />
		<rosparam command="load" file="$(find hybrid_astar)/maps/voronoi/graph.yaml"/>
	</node>
 <arg name="set_map_frame"  default="map"/>
  <arg name="tb3_0_prefix" value="tb3_0"/>
  <group ns="$(arg tb3_0_prefix)">
    <include file="$(find turtlebot3_navigation)/launch/single_amcl.launch">
      <arg name="model" value="$(arg model)"/>
      <arg name="set_base_frame" value="$(arg tb3_0_prefix)/base_footprint"/>
      <arg name="set_odom_frame" value="$(arg tb3_0_prefix)/odom"/>
      <arg name="set_scan_frame" value="$(arg tb3_0_prefix)/base_scan"/>
      <arg name="set_map_frame" value="$(arg set_map_frame)"/>
      <arg name="open_rviz" value="false"/>
      <arg name="initial_pose_x" default="-6.58309602737"/>
      <arg name="initial_pose_y" default="-0.598859667778"/>
      <arg name="initial_pose_a" default="1.57"/>
    </include>
  </group>
<!--  <arg name="tb3_1_prefix" value="tb3_1"/>
  <group ns="$(arg tb3_1_prefix)">
    <include file="$(find turtlebot3_navigation)/launch/single_robot.launch">
      <arg name="model" value="$(arg model)"/>
      <arg name="set_base_frame" value="$(arg tb3_1_prefix)/base_footprint"/>
      <arg name="set_odom_frame" value="$(arg tb3_1_prefix)/odom"/>
      <arg name="set_scan_frame" value="$(arg tb3_1_prefix)/base_scan"/>
      <arg name="set_map_frame" value="$(arg set_map_frame)"/>
      <arg name="open_rviz" value="false"/>
      <arg name="initial_pose_x" default="6.72441768646"/>
      <arg name="initial_pose_y" default="-1.08069348335"/>
      <arg name="initial_pose_a" default="1.57"/>
    </include>
  </group>-->
  <arg name="tb3_1_prefix" value="tb3_1"/>
  <group ns="$(arg tb3_1_prefix)">
    <include file="$(find turtlebot3_navigation)/launch/single_amcl.launch">
      <arg name="model" value="$(arg model)"/>
      <arg name="set_base_frame" value="$(arg tb3_1_prefix)/base_footprint"/>
      <arg name="set_odom_frame" value="$(arg tb3_1_prefix)/odom"/>
      <arg name="set_scan_frame" value="$(arg tb3_1_prefix)/base_scan"/>
      <arg name="set_map_frame" value="$(arg set_map_frame)"/>
      <arg name="open_rviz" value="false"/>
      <arg name="initial_pose_x" default="6.72441768646"/>
      <arg name="initial_pose_y" default="-1.08069348335"/>
      <arg name="initial_pose_a" default="1.57"/>
    </include>
  </group>

  <!--<arg name="tb3_2_prefix" value="tb3_2"/>
  <group ns="$(arg tb3_2_prefix)">
    <include file="$(find turtlebot3_navigation)/launch/single_amcl.launch">
      <arg name="model" value="$(arg model)"/>
      <arg name="set_base_frame" value="$(arg tb3_2_prefix)/base_footprint"/>
      <arg name="set_odom_frame" value="$(arg tb3_2_prefix)/odom"/>
      <arg name="set_scan_frame" value="$(arg tb3_2_prefix)/base_scan"/>
      <arg name="set_map_frame" value="$(arg set_map_frame)"/>
      <arg name="open_rviz" value="false"/>
      <arg name="initial_pose_x" default="6.72441768646"/>
      <arg name="initial_pose_y" default="+1.08069348335"/>
      <arg name="initial_pose_a" default="1.57"/>
    </include>
  </group> -->
	<arg name="config" default="visualization" />
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find hybrid_astar)/rviz/$(arg config).rviz" /> 
	<!-- tf left and right
	<node name="robot_tf_publisher_left" pkg="hybrid_astar" type="tf_broadcaster_left"/>
	<node name="robot_tf_publisher_right" pkg="hybrid_astar" type="tf_broadcaster_right"/>
	<node name="robot_tf_listener_left" pkg="hybrid_astar" type="tf_broadcaster_left"/>
	<node name="robot_tf_listener_right" pkg="hybrid_astar" type="tf_broadcaster_right"/>-->
</launch>
