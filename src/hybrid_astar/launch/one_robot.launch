<launch>
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="1" />
  <arg name="yaw" default="0" />
  <arg name ="robot_name" default="ridgeback"/>

<arg name="config" default="dual_hokuyo_lasers" />
	<param name="/$(arg robot_name)/robot_description"
		command="$(find ridgeback_description)/scripts/env_run
			$(find ridgeback_description)/urdf/configs/$(arg config)
			$(find xacro)/xacro $(find ridgeback_description)/urdf/ridgeback.urdf.xacro
			--inorder " />

 <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model $(arg robot_name) -param /robot_description -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw)" />
     respawn="false" output="screen" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" 
          name="robot_state_publisher" output="screen"/>

    <!-- The odometry estimator, throttling, fake laser etc. go here -->
    <!-- All the stuff as from usual robot launch file -->

 <rosparam param="/gazebo_ros_control/pid_gains">
    front_left_wheel:
      p: 1
      i: 0.1
      d: 0
    front_right_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_left_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_right_wheel:
      p: 1
      i: 0.1
      d: 0
  </rosparam>

 <!-- control -->

   <rosparam command="load" file="$(find ridgeback_control)/config/control.yaml" ns="/$(arg robot_name)"/>

  <group if="$(optenv RIDGEBACK_CONTROL_EXTRAS 0)" >
    <rosparam command="load" file="$(env RIDGEBACK_CONTROL_EXTRAS_PATH)" />
  </group>

  <node name="controller_spawner_$(arg robot_name)"  pkg="controller_manager" type="spawner"
        args=" --namespace=/$(arg robot_name) 
	ridgeback_joint_publisher 
	ridgeback_velocity_controller" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" />

  <node pkg="topic_tools" type="relay" name="cmd_vel_relay"
        args="cmd_vel /$(arg robot_name)/ridgeback_velocity_controller/cmd_vel" />

 <?ignore <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="joystick" default="true" />

  <group ns="bluetooth_teleop" if="$(arg joystick)">

    <group unless="$(optenv RIDGEBACK_PS3 0)" >
      <rosparam command="load" file="$(find ridgeback_control)/config/teleop_ps4.yaml" />
    </group>

    <group if="$(optenv RIDGEBACK_PS3 0)" >
      <rosparam command="load" file="$(find ridgeback_control)/config/teleop_ps3.yaml" />
      <param name="joy_node/dev" value="$(arg joy_dev)" />
    </group>

    <node pkg="joy" type="joy_node" name="joy_node" />

    <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy">
      <remap from="cmd_vel" to="/cmd_vel" />
    </node>
  </group>

  <arg name="config" default="linear" />

  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server">
    <remap from="twist_marker_server/cmd_vel" to="/cmd_vel" />
    <rosparam command="load" file="$(find interactive_marker_twist_server)/config/$(arg config).yaml" /> 
  </node> ?>
</launch>
